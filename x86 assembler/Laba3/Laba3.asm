	model SMALL																					; Определение типа модели памяти

	stack 100h																					; Определение сегмента стека размером 256 байт
	dataseg																						; Определение сегмента данных

count 		dw ?																				; Переменная размером 2 байта
mass 		dw 056CEh, 0A50Ah, 954Bh, 0AC26h, 02D29h, 0A788h, 02C6Dh, 0628Fh, 01D80h, 094FFh	; Массив слов в 16-ричной СС
size_mass 	dw 10																				; Размер массива 

	codeseg																						; Определение сегмент кода
START:
	startupcode																					; Начало выполнения программы
	
	lea BX, mass																				; Загрузить адрес массива
	mov CX, size_mass																			; Установить счётчик
	mov DX, 0
	
BEG: 
	mov AX, [BX]															; Элемент массива по адресу BX в регистр - аккумулятор, 2 байта
	and AX, 1Fh																; Выполняем поразрядную конъюнкцию, оставляя в дате только день
	cmp AX, 10																; Смотрим дата относится к первой декаде или нет
	jnbe NO																	; Если значение больше 10 переходим по метке NO
	add DX, 1																; Увеличиваем счётчик на 1
NO:	
	add BX, 2																; Следующий элемент массива
	loop BEG																; Возврат, если счётчик CX <> 0
	mov count, DX															; Записть в count значения в регистре DX

QUIT: 
	exitcode 0																; Возврат управления операционной системе, код возврата 0
	end																		; Конец программы
	;56CE = 0101011 0110 01110 = 14
	;A50A = 1010010 1000 01010 = 10
	;954B = 1001010 1010 01011 = 11
	;AC26 = 1010110 0001 00110 = 6
	;2D29 = 0010110 1001 01001 = 9
	;A788 = 1010011 1100 01000 = 8
	;2C6D = 0010110 0011 01101 = 13
	;628F = 0110001 0100 01111 = 15
	;1D80 = 0001110 1100 00000 = 0
	;94FF = 1001010 0111 11111 = 31