Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 1
dana.asm



      1					 ;Laboratory task 7, 5th variant
      2	    0000			 model small
      3					 .486 ;директива разрешает ассемблирование		    +
      4					 инструкций процессора
      5	    0000			 stack 100h
      6	    0000			 dataseg
      7					 ; Переменные	для A
      8	    0000  45 6E	74 65 72 20 74+	 askA	     db	'Enter the number A: $'
      9		  68 65	20 6E 75 6D 62+
     10		  65 72	20 41 3A 20 24
     11	    0015  0A			 bufA	       db 10
     12	    0016  ??			 lenA	     db	?
     13	    0017  0A*(??)		 bufferA	 db 10 dup(?)
     14	    0021  0000000000000000	 A	     dq	0
     15					 ; Переменные	для B
     16	    0029  45 6E	74 65 72 20 74+	 askB	     db	'Enter the number B: $'
     17		  68 65	20 6E 75 6D 62+
     18		  65 72	20 42 3A 20 24
     19	    003E  0A			 bufB	       db 10
     20	    003F  ??			 lenB	     db	?
     21	    0040  0A*(??)		 bufferB	 db 10 dup(?)
     22	    004A  0000000000000000	 B	     dq	0
     23					 ; Переменные	для Е
     24	    0052  45 6E	74 65 72 20 74+	 askE	     db	'Enter the number E: $'
     25		  68 65	20 6E 75 6D 62+
     26		  65 72	20 45 3A 20 24
     27	    0067  0A			 bufE	       db 10
     28	    0068  ??			 lenE	     db	?
     29	    0069  0A*(??)		 bufferE	 db 10 dup(?)
     30	    0073  0000000000000000	 E	     dq	0
     31					 ; Переменные	для результата
     32	    007B  54 68	65 20 65 71 75+	 isError      db 'The equation has no roots on a given segment.$'
     33		  61 74	69 6F 6E 20 68+
     34		  61 73	20 6E 6F 20 72+
     35		  6F 6F	74 73 20 6F 6E+
     36		  20 61	20 67 69 76 65+
     37		  6E 20	73 65 67 6D 65+
     38		  6E 74	2E 24
     39	    00A9  54 68	65 20 72 6F 6F+	 isSuccess    db 'The root of the equation is $'
     40		  74 20	6F 66 20 74 68+
     41		  65 20	65 71 75 61 74+
     42		  69 6F	6E 20 69 73 20+
     43		  24
     44	    00C6  0A*(??)		 result	     db	10 dup(?)
     45	    00D0  0000000000000000	 root	     dq	0
     46					 ; Вспомогательные переменные
     47	    00D8  0000000000000002	 num	     dq	2
     48	    00E0  0000000000000000	 y1	     dq	0
     49	    00E8  0000000000000000	 y2	     dq	0
     50	    00F0  0000000000000000	 y1y2	     dq	0
     51	    00F8  0D 0A	24		 isEnter      db 0Dh, 0Ah, '$'
     52
     53	    00FB			 codeseg
     54	    0000			 start:
     55						 startupcode
1    56	    0000			 @Startup:
1    57	    0000  BA 0000s			 MOV	 DX,@data
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 2
dana.asm



1    58	    0003  8E DA				 MOV	 DS,DX
1    59	    0005  8C D3				 MOV	 BX,SS
1    60	    0007  2B DA				 SUB	 BX,DX
1    61	    0009  C1 E3	04			 SHL	 BX,4
1    62	    000C  8E D2				 MOV	 SS,DX
1    63	    000E  03 E3				 ADD	 SP,BX
     64	    0010  9B DB	E3			 finit	;инициализация сопроцессора
     65	    0013			 enterAB:
     66					     ;Ввод А
     67	    0013  B4 09				 mov AH, 09h
     68	    0015  BA 0000r		     lea DX, askA
     69	    0018  CD 21			     int 21h
     70
     71	    001A  B4 0A				 mov AH, 0Ah
     72	    001C  BA 0015r		     lea DX, bufA
     73	    001F  CD 21			     int 21h
     74
     75	    0021  B4 09				 mov AH, 09h
     76	    0023  BA 00F8r		     lea DX, isEnter
     77	    0026  CD 21			     int 21h
     78
     79						 ;Ввод В
     80	    0028  B4 09				 mov AH, 09h
     81	    002A  BA 0029r		     lea DX, askB
     82	    002D  CD 21			     int 21h
     83
     84	    002F  B4 0A				 mov AH, 0Ah
     85	    0031  BA 003Er		     lea DX, bufB
     86	    0034  CD 21			     int 21h
     87
     88	    0036  B4 09				 mov AH, 09h
     89	    0038  BA 00F8r		     lea DX, isEnter
     90	    003B  CD 21			     int 21h
     91
     92	    003D  68 0021r			 push offset A
     93	    0040  68 0017r			 push offset bufferA
     94	    0043  E8 023E			 call StrToDouble
     95
     96	    0046  68 004Ar			 push offset B
     97	    0049  68 0040r			 push offset bufferB
     98	    004C  E8 0235			 call StrToDouble
     99
    100	    004F  DD 06	0021r			 fld A
    101	    0053  DD 06	004Ar			 fld B
    102	    0057  D8 D1				 fcom
    103	    0059  9B DF	E0			 fstsw AX
    104	    005C  9E				 sahf
    105	    005D  72 B4				 jb enterAB
    106
    107	    005F			 enterE:
    108						 ;вводим Е
    109	    005F  B4 09				 mov AH, 09h
    110	    0061  BA 0052r			 lea DX, askE
    111	    0064  CD 21				 int 21h
    112
    113	    0066  B4 0A				 mov AH, 0Ah
    114	    0068  BA 0067r			 lea DX, bufE
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 3
dana.asm



    115	    006B  CD 21				 int 21h
    116
    117	    006D  B4 09				 mov AH, 09h
    118	    006F  BA 00F8r			 lea DX, isEnter
    119	    0072  CD 21				 int 21h
    120
    121	    0074  68 0073r			 push offset E
    122	    0077  68 0069r			 push offset bufferE
    123	    007A  E8 0207			 call StrToDouble
    124
    125	    007D  DD 06	0073r			 fld E
    126	    0081  D9 E4				 ftst
    127	    0083  9B DF	E0			 fstsw ax
    128	    0086  9E				 sahf
    129	    0087  76 D6				 jbe enterE
    130
    131	    0089			 checkRoot: ;проверка на сходимость	f(a)*f(b)<0
    132	    0089  DD 06	0021r			 fld A
    133	    008D  E8 00E4			 call function
    134	    0090  DD 16	00E0r			 fst y1
    135
    136
    137	    0094  DD 06	004Ar			 fld B
    138	    0098  E8 00D9			 call function
    139	    009B  DD 16	00E8r			 fst y2
    140
    141	    009F  DD 06	00E0r			 fld y1
    142	    00A3  DD 06	00E8r			 fld y2
    143	    00A7  DE C9				 fmul
    144
    145	    00A9  DD 16	00F0r			 fst y1y2
    146	    00AD  D8 D1				 fcom
    147	    00AF  9B DF	E0			 fstsw ax
    148	    00B2  9E				 sahf
    149	    00B3  77 23	90 90			 ja endNoRoot
    150
    151	    00B7			 find_root:
    152	    00B7  E8 0038			 call findRoot
    153	    00BA  DD 16	00D0r			 fst root
    154	    00BE  68 00C6r			 push offset result
    155	    00C1  68 00D0r			 push offset root
    156	    00C4  E8 00F4			 call DoubleToStr
    157
    158	    00C7  B4 09				 mov AH, 09h
    159	    00C9  BA 00A9r			 lea DX, isSuccess
    160	    00CC  CD 21				 int 21h
    161
    162	    00CE  B4 09				 mov AH, 09h
    163	    00D0  BA 00C6r			 lea DX, result
    164	    00D3  CD 21				 int 21h
    165
    166	    00D5  EB 08	90			 jmp quit
    167
    168
    169	    00D8			 endNoRoot:
    170	    00D8  B4 09				 mov AH, 09h
    171	    00DA  BA 007Br			 lea DX, isError
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 4
dana.asm



    172	    00DD  CD 21				 int 21h
    173
    174	    00DF			 quit:
    175	    00DF  B4 0A				 mov AH, 0Ah
    176	    00E1  BA 0015r			 lea DX, bufA
    177	    00E4  CD 21				 int 21h
    178	    00E6  B4 09				 mov AH, 09h
    179
    180	    00E8  BA 00F8r			 lea DX, isEnter
    181	    00EB  CD 21				 int 21h
    182						 exitcode 0
1   183	    00ED  B8 4C00			 MOV	 AX,04C00h
1   184	    00F0  CD 21				 INT	 21h
    185
    186
    187					 ;Действие:
    188						 ;Нахождение корня функции на отрезке методом +
    189					 деления	отрезка пополам с точностью E
    190					 ;Параметры:
    191						 ;Входные параметры: ST(0) <- E, ST(1) <- A, ST(2) <- B
    192					 ;Возвращает:
    193						 ;ST(0)
    194
    195					 ;Подпрограмма для нахождения корня уравнения
    196	    00F2			 findRoot proc near
    197	    00F2			 startDo:
    198	    00F2			 checkLoop:
    199	    00F2  DD 06	004Ar			 fld B ;добавить в ST(0)  B
    200	    00F6  DD 06	0021r			 fld A ;добавить в ST(0) A
    201	    00FA  DE E9				 fsub ;записать	в ST(0) A-B
    202	    00FC  DD 06	0073r			 fld E ;добавить в ST(0) E
    203	    0100  D8 D1				 fcom ;сравнить	ST(0) и ST(1)
    204	    0102  9B DF	E0			 fstsw ax ;загрузить регистр SWR в AX
    205	    0105  9E				 sahf ;	загрузить AH в младший	байт регистра	    +
    206					 флагов
    207	    0106  77 5B	90 90			 ja endDo
    208	    010A  DD 06	0021r			 fld A
    209	    010E  E8 0063			 call function
    210	    0111  DD 16	00E0r			 fst y1	;y1 <- ST(0)
    211	    0115  DD 06	0021r			 fld A
    212	    0119  DD 06	004Ar			 fld B
    213	    011D  DE C1				 fadd  ;записать в ST(0) A+B
    214	    011F  DF 2E	00D8r			 fild num  ;добавить в	ST(0) 2
    215	    0123  DE F9				 fdiv ;записать	в ST(0) (A+B)/2
    216	    0125  DD 16	00D0r			 fst root ;root	<- ST(0)
    217
    218	    0129  DD 06	00D0r			 fld root ;ST(0)<- root
    219	    012D  E8 0044			 call function
    220	    0130  DD 16	00E8r			 fst y2	;y2 <- ST(0)
    221
    222	    0134  DD 06	00E0r			 fld y1	;ST(0)<- y1
    223	    0138  DD 06	00E8r			 fld y2	;ST(0)<- y2
    224	    013C  DE C9				 fmul ;ST(0)<- y1*y2
    225	    013E  DD 16	00F0r			 fst y1y2 ;y1y2	<- ST(0)
    226	    0142  D8 D1				 fcom ;сравнить	ST(0) и ST(1)
    227	    0144  9B DF	E0			 fstsw ax   ;загрузить	регистр SWR в AX
    228	    0147  9E				 sahf ;	загрузить AH в младший	байт регистра	    +
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 5
dana.asm



    229					 флагов
    230	    0148  77 05	90 90			 ja lessZero
    231
    232	    014C  EB 0B	90			 jmp moreZero
    233	    014F			 lessZero:
    234	    014F  DD 06	00D0r			 fld root ;ST(0)<- root
    235	    0153  DD 16	0021r			 fst A ;A <- ST(0)
    236	    0157  EB 99				 jmp startDo
    237
    238	    0159			 moreZero:
    239	    0159  DD 06	00D0r			 fld root ;ST(0)<- root
    240	    015D  DD 16	004Ar			 fst B	;B <- ST(0)
    241	    0161  EB 8F				 jmp startDo
    242
    243	    0163			 endDo:
    244	    0163  DD 06	0021r			 fld A ;добавить в ST(0) A
    245	    0167  DD 06	004Ar			 fld B ;добавить в ST(0)  B
    246	    016B  DE C1				 fadd  ;записать в ST(0) A+B
    247	    016D  DF 2E	00D8r			 fild num  ;добавить в	ST(0) 2
    248	    0171  DE F9				 fdiv ;записать	в ST(0) (A+B)/2
    249	    0173  C3				 ret
    250	    0174			 findRoot endp
    251
    252
    253					 ; Подпрограмма, выполняющая вычисление функции	f   +
    254					 (x)=x^3–8x^2+x+42
    255					 ;Действие:
    256						 ;Вычисляет функцию от заданного значения
    257					 ;Параметры:
    258						 ;Входные параметры: ST(0)
    259					 ;Возвращает:
    260						 ;ST(0)
    261	    0174			 function proc near
    262	    0174  55				 push bp
    263	    0175  8B EC				 mov bp, sp ;заносим вершину стека
    264	    0177  83 EC	08			 sub sp, 8 ;выделяем 8 байт	стека
    265
    266	    017A  DD 56	F8			 fst qword ptr[bp-8]
    267	    017D  DD 46	F8			 fld qword ptr[bp-8]
    268
    269	    0180  DC 4E	F8			 fmul qword ptr[bp-8]
    270	    0183  DC 4E	F8			 fmul qword ptr[bp-8]
    271	    0186  D9 C9				 fxch st(1) ;Обмен	вершины стека ST(0)	с другим		    +
    272					 регистром стека ST(I)
    273
    274
    275	    0188  83 EC	02			 sub sp, 2
    276
    277	    018B  C7 46	F6 0008			 mov word ptr[bp-10], 8
    278	    0190  DF 46	F6			 fild word ptr[bp-10] ;Загрузка	числа из	памяти в		    +
    279					 вершину	стека сопроцессора
    280
    281	    0193  DC 4E	F8			 fmul qword ptr[bp-8]
    282	    0196  DC 4E	F8			 fmul qword ptr[bp-8]
    283	    0199  D9 E0				 fchs ;меняем знак
    284
    285	    019B  DE C2				 faddp st(2), st(0)  ;Сложение ST(i) и	ST(0) с выталкиванием +
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 6
dana.asm



    286					 значения из ST(0). Результат помещается в ST(i – 1)
    287
    288
    289	    019D  C7 46	F6 0001			 mov word ptr[bp-10], 1
    290	    01A2  DF 46	F6			 fild word ptr[bp-10] ;Загрузка	числа из	памяти в		    +
    291					 вершину	стека сопроцессора
    292
    293	    01A5  DE C9				 fmul
    294	    01A7  DE C1				 faddp
    295
    296	    01A9  C7 46	F6 002A			 mov word ptr[bp-10], 42
    297	    01AE  DF 46	F6			 fild word ptr[bp-10]
    298	    01B1  DE C1				 fadd
    299
    300	    01B3  83 C4	02			 add sp, 2
    301	    01B6  83 C4	08			 add sp, 8
    302	    01B9  5D				 pop bp
    303	    01BA  C3				 ret
    304	    01BB			 function endp
    305
    306					 ;Подпрограмма для перевода вещественного типа к   +
    307					 строковому
    308	    01BB			 DoubleToStr proc near
    309	    01BB  55				 push bp
    310	    01BC  8B EC				 mov bp, sp
    311	    01BE  83 EC	04			 sub sp, 4
    312	    01C1  50 53	52 51 57		 push ax bx dx cx di
    313	    01C6  9C				 pushf
    314	    01C7  D9 7E	FC			 fnstcw	[bp-4]
    315	    01CA  D9 7E	FE			 fnstcw	[bp-2]
    316
    317	    01CD  81 66	FE F3FF			 and word ptr [bp - 2],	1111001111111111b
    318	    01D2  81 4E	FE 0C00			 or word ptr [bp - 2], 0000110000000000b
    319	    01D7  D9 6E	FE			 fldcw [bp - 2]
    320	    01DA  8B 5E	04			 mov bx, [bp + 4]
    321	    01DD  DD 07				 fld qword ptr[bx]
    322	    01DF  D9 E4				 ftst
    323	    01E1  9B DF	E0			 fstsw ax
    324	    01E4  80 E4	01			 and ah, 1
    325	    01E7  80 FC	01			 cmp ah, 1
    326	    01EA  75 0B	90 90			 jne @@NBE
    327	    01EE  8B 5E	06			 mov bx, [bp + 6]
    328	    01F1  C6 07	2D			 mov byte ptr[bx], '-'
    329	    01F4  FF 46	06			 inc word ptr[bp + 6]
    330
    331	    01F7			 @@NBE:
    332	    01F7  D9 E1				 fabs
    333	    01F9  DD D1				 fst st(1)
    334	    01FB  DD D2				 fst st(2)
    335	    01FD  D9 FC				 frndint
    336	    01FF  DC EA				 fsub st(2), st(0)
    337	    0201  C7 46	FE 000A			 mov word ptr[bp - 2], 10
    338	    0206  DF 46	FE			 fild word ptr[bp - 2]
    339	    0209  D9 C9				 fxch st(1)
    340	    020B  33 C9				 xor cx, cx
    341
    342	    020D			 @@BG:
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 7
dana.asm



    343	    020D  D9 F8				 fprem
    344	    020F  DF 56	FE			 fist word ptr [bp - 2]
    345	    0212  FF 76	FE			 push word ptr [bp - 2]
    346	    0215  D9 CA				 fxch st(2)
    347	    0217  D8 F1				 fdiv st(0), st(1)
    348	    0219  D9 FC				 frndint
    349	    021B  DD D2				 fst st(2)
    350	    021D  41				 inc cx
    351	    021E  D9 E4				 ftst
    352	    0220  9B DF	E0			 fstsw ax
    353	    0223  9E				 sahf
    354
    355	    0224  75 E7				 jnz @@BG ; если 14	бит SR == 0 (6 бит AH) (если zf == 0 прыжок)
    356	    0226  8B C1				 mov ax, cx
    357	    0228  8B 5E	06			 mov bx, [bp + 6]
    358
    359	    022B			 @@BFG:
    360	    022B  5A				 pop dx
    361	    022C  83 C2	30			 add dx, '0'
    362	    022F  88 17				 mov byte ptr[bx], dl
    363	    0231  43				 inc bx
    364	    0232  E2 F7				 loop @@BFG
    365	    0234  D9 CB				 fxch st(3)
    366	    0236  DD D2				 fst st(2)
    367	    0238  D9 E4				 ftst
    368	    023A  9B DF	E0			 fstsw ax
    369	    023D  9E				 sahf
    370	    023E  74 2B	90 90			 jz @@CNE
    371	    0242  C6 07	2E			 mov byte ptr[bx], '.'
    372	    0245  B9 0010			 mov cx, 16
    373
    374	    0248			 @@BFR:
    375	    0248  D8 C9				 fmul st(0), st(1)
    376	    024A  DD D2				 fst st(2)
    377	    024C  D9 FC				 frndint
    378	    024E  DC EA				 fsub st(2), st(0)
    379	    0250  DF 56	FE			 fist word ptr [bp - 2]
    380	    0253  D9 CA				 fxch st(2)
    381	    0255  8B 46	FE			 mov ax, [bp - 2]
    382	    0258  05 0030			 add ax, '0'
    383	    025B  43				 inc bx
    384	    025C  88 07				 mov byte ptr[bx], al
    385	    025E  E2 E8				 loop @@BFR
    386
    387	    0260			 @@NIL:
    388	    0260  80 3F	30			 cmp byte ptr[bx], '0'
    389	    0263  75 05	90 90			 jne @@CNR
    390	    0267  4B				 dec bx
    391	    0268  EB F6				 jmp @@NIL
    392
    393	    026A			 @@CNR:
    394	    026A  43				 inc bx
    395
    396	    026B			 @@CNE:
    397	    026B  C6 07	24			 mov byte ptr[bx], '$'
    398	    026E  DD D8				 fstp st(0)
    399	    0270  DD D8				 fstp st(0)
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 8
dana.asm



    400
    401	    0272  DD D8				 fstp st(0)
    402	    0274  DD D8				 fstp st(0)
    403	    0276  D9 6E	FC			 fldcw [bp - 4]
    404	    0279  9D				 popf
    405	    027A  5F 59	5A 5B 58		 pop di	cx dx bx ax
    406	    027F  83 C4	04			 add sp, 4
    407	    0282  5D				 pop bp
    408	    0283  C3				 ret
    409	    0284			 DoubleToStr endp
    410
    411					 ;Подпрограмма для перевода строкового	типа к	    +
    412					 вещественному
    413	    0284			 StrToDouble proc near
    414	    0284  55				 push bp
    415	    0285  8B EC				 mov bp, sp
    416	    0287  83 EC	02			 sub sp, 2
    417	    028A  50 53	52 51 57		 push ax bx dx cx di
    418	    028F  9C				 pushf
    419	    0290  C7 46	FE 000A			 mov word ptr[bp - 2], 10
    420	    0295  DF 46	FE			 fild word ptr[bp - 2]
    421	    0298  D9 EE				 fldz
    422	    029A  BF 0000			 mov di, 0
    423	    029D  8B 5E	04			 mov bx, [bp + 4]
    424	    02A0  80 3F	2D			 cmp byte ptr[bx], '-'
    425	    02A3  75 06	90 90			 jne @@BPN
    426	    02A7  43				 inc bx
    427	    02A8  BF 0001			 mov di, 1
    428
    429	    02AB			 @@BPN:
    430
    431	    02AB  0F BE	07			 movsx ax, byte	ptr [bx]
    432	    02AE  3D 002E			 cmp ax, '.'
    433	    02B1  74 1E	90 90			 je @@PNT1
    434	    02B5  3D 000D			 cmp ax, 0dh
    435	    02B8  75 09	90 90			 jne @@CNT
    436	    02BC  D9 C9				 fxch st(1)
    437	    02BE  DD D8				 fstp st(0)
    438	    02C0  EB 41	90			 jmp @@REN
    439
    440	    02C3			 @@CNT:
    441	    02C3  2D 0030			 sub ax, '0'
    442	    02C6  89 46	FE			 mov word ptr[bp - 2], ax
    443	    02C9  D8 C9				 fmul st(0), st(1)
    444	    02CB  DE 46	FE			 fiadd word ptr[bp - 2]
    445	    02CE  43				 inc bx
    446	    02CF  EB DA				 jmp @@BPN
    447
    448	    02D1			 @@PNT1:
    449	    02D1  33 C9				 xor cx, cx
    450
    451	    02D3			 @@BEG:
    452	    02D3  43				 inc bx
    453	    02D4  0F BE	07			 movsx ax, byte	ptr [bx]
    454	    02D7  3D 000D			 cmp ax, 0dh
    455	    02DA  74 04	90 90			 je @@END
    456	    02DE  E2 F3				 loop @@BEG
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 9
dana.asm



    457
    458	    02E0			 @@END:
    459	    02E0  4B				 dec bx
    460	    02E1  D9 C9				 fxch st(1)
    461	    02E3  D9 EE				 fldz
    462
    463	    02E5			 @@APN:
    464	    02E5  0F BE	07			 movsx ax, [bx]
    465	    02E8  3D 002E			 cmp ax, '.'
    466	    02EB  74 10	90 90			 je @@PNT2
    467	    02EF  2D 0030			 sub ax, '0'
    468	    02F2  89 46	FE			 mov word ptr[bp - 2], ax
    469	    02F5  DE 46	FE			 fiadd word ptr[bp - 2]
    470	    02F8  D8 F1				 fdiv st(0), st(1)
    471	    02FA  4B				 dec bx
    472	    02FB  EB E8				 jmp @@APN
    473
    474	    02FD			 @@PNT2:
    475	    02FD  D9 C9				 fxch st(1)
    476	    02FF  DD D8				 fstp st(0)
    477	    0301  DE C1				 faddp st(1)
    478
    479	    0303			 @@REN:
    480	    0303  83 FF	01			 cmp di, 1
    481	    0306  75 04	90 90			 jne @@CYK
    482	    030A  D9 E0				 fchs
    483
    484	    030C			 @@CYK:
    485	    030C  8B 5E	06			 mov bx, [bp + 6]
    486	    030F  DD 1F				 fstp qword ptr	[bx]
    487	    0311  9D				 popf
    488	    0312  5F 59	5A 5B 58		 pop di	cx dx bx ax
    489	    0317  83 C4	02			 add sp, 2
    490	    031A  5D				 pop bp
    491	    031B  C3				 ret
    492	    031C			 StrToDouble endp
    493					 end start
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 10
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/11/23"
??FILENAME			  Text	 "dana	  "
??TIME				  Text	 "14:28:43"
??VERSION			  Number 030A
@32BIT				  Text	 0
@@APN				  Near	 _TEXT:02E5
@@BEG				  Near	 _TEXT:02D3
@@BFG				  Near	 _TEXT:022B
@@BFR				  Near	 _TEXT:0248
@@BG				  Near	 _TEXT:020D
@@BPN				  Near	 _TEXT:02AB
@@CNE				  Near	 _TEXT:026B
@@CNR				  Near	 _TEXT:026A
@@CNT				  Near	 _TEXT:02C3
@@CYK				  Near	 _TEXT:030C
@@END				  Near	 _TEXT:02E0
@@NBE				  Near	 _TEXT:01F7
@@NIL				  Near	 _TEXT:0260
@@PNT1				  Near	 _TEXT:02D1
@@PNT2				  Near	 _TEXT:02FD
@@REN				  Near	 _TEXT:0303
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 1F1FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 DANA
@INTERFACE			  Text	 00H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@STARTUP			  Near	 _TEXT:0000
@WORDSIZE			  Text	 2
A				  Qword	 DGROUP:0021
ASKA				  Byte	 DGROUP:0000
ASKB				  Byte	 DGROUP:0029
ASKE				  Byte	 DGROUP:0052
B				  Qword	 DGROUP:004A
BUFA				  Byte	 DGROUP:0015
BUFB				  Byte	 DGROUP:003E
BUFE				  Byte	 DGROUP:0067
BUFFERA				  Byte	 DGROUP:0017
BUFFERB				  Byte	 DGROUP:0040
BUFFERE				  Byte	 DGROUP:0069
CHECKLOOP			  Near	 _TEXT:00F2
CHECKROOT			  Near	 _TEXT:0089
DOUBLETOSTR			  Near	 _TEXT:01BB
E				  Qword	 DGROUP:0073
ENDDO				  Near	 _TEXT:0163
ENDNOROOT			  Near	 _TEXT:00D8
ENTERAB				  Near	 _TEXT:0013
ENTERE				  Near	 _TEXT:005F
FINDROOT			  Near	 _TEXT:00F2
FIND_ROOT			  Near	 _TEXT:00B7
Turbo Assembler	 Version 3.1	    12/11/23 14:28:43	    Page 11
Symbol Table



FUNCTION			  Near	 _TEXT:0174
ISENTER				  Byte	 DGROUP:00F8
ISERROR				  Byte	 DGROUP:007B
ISSUCCESS			  Byte	 DGROUP:00A9
LENA				  Byte	 DGROUP:0016
LENB				  Byte	 DGROUP:003F
LENE				  Byte	 DGROUP:0068
LESSZERO			  Near	 _TEXT:014F
MOREZERO			  Near	 _TEXT:0159
NUM				  Qword	 DGROUP:00D8
QUIT				  Near	 _TEXT:00DF
RESULT				  Byte	 DGROUP:00C6
ROOT				  Qword	 DGROUP:00D0
START				  Near	 _TEXT:0000
STARTDO				  Near	 _TEXT:00F2
STRTODOUBLE			  Near	 _TEXT:0284
Y1				  Qword	 DGROUP:00E0
Y1Y2				  Qword	 DGROUP:00F0
Y2				  Qword	 DGROUP:00E8

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  00FB Word	  Public  DATA
_TEXT				  16  031C Word	  Public  CODE
