	model SMALL				; Определение типа модели памяти

	stack 100h				; Определение сегмента стека размером 256 байт
	dataseg					; Определение сегмента данных

count 		dw ?			; Переменная размером 2 байта
mass 		db 1, 2, 3, 4	; Байтовый массив
size_mass 	dw 4			; Размер массива (2 байта)
one         db 1			; Байтовая переменная со значением 1

	codeseg					; Определение сегмент кода
START:
	startupcode				; Начало выполнения программы
	
	lea BX, mass			; Загрузить адрес массива
	mov CX, size_mass		; Установить счётчик
	mov DX, 0
	
BEG: 
	mov AL, [BX]			; Элемент массива по адресу BX в регистр - аккумулятор, 1 байт
	test AL, one			; Проверяем на чётность поразрядной конъюнкцией
	jnz UNEVEN				; Переходим по метке UNEVEN, если число нечетное
	add DX, 1				; Увеличиваем число чётных чисел на 1
UNEVEN:
	add BX, 1				; Следующий элемент массива
	loop BEG				; Возврат, если счётчик CX <> 0
	mov count, DX			; Записть в count значения в регистре DX

QUIT: 
	exitcode 0				; Возврат управления операционной системе, код возврата 0
	end						; Конец программы